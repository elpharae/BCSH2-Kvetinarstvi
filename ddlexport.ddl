-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2023-11-04 15:29:32 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE adresy (
    adresa_id NUMBER NOT NULL,
    psc       CHAR(5 CHAR) NOT NULL,
    ulice     VARCHAR2(50 CHAR) NOT NULL,
    mesto     VARCHAR2(50 CHAR) NOT NULL,
    cp        CLOB NOT NULL
);

ALTER TABLE adresy ADD CONSTRAINT adresa_pk PRIMARY KEY ( adresa_id );

CREATE TABLE barvy (
    barva_id NUMBER NOT NULL,
    nazev    VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE barvy ADD CONSTRAINT barva_pk PRIMARY KEY ( barva_id );

CREATE TABLE ceny (
    cena_id NUMBER NOT NULL,
    hodnota NUMBER(6, 2) NOT NULL
);

ALTER TABLE ceny ADD CONSTRAINT cena_pk PRIMARY KEY ( cena_id );

CREATE TABLE historie_ceny (
    kvetina_id NUMBER NOT NULL,
    cena_id    NUMBER NOT NULL,
    cas_od     DATE NOT NULL,
    cas_do     DATE NOT NULL
);

ALTER TABLE historie_ceny ADD CONSTRAINT historie_ceny_pk PRIMARY KEY ( kvetina_id,
                                                                        cena_id );

CREATE TABLE kategorie (
    kategorie_id    NUMBER NOT NULL,
    nadkategorie_id NUMBER,
    nazev           VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE kategorie ADD CONSTRAINT kategorie_pk PRIMARY KEY ( kategorie_id );

CREATE TABLE kvetiny (
    kvetina_id   NUMBER NOT NULL,
    barva_id     NUMBER NOT NULL,
    kategorie_id NUMBER NOT NULL,
    obrazek_id   NUMBER,
    nazev        VARCHAR2(50 CHAR) NOT NULL,
    pocet        NUMBER NOT NULL,
    popis        CLOB
);

ALTER TABLE kvetiny ADD CONSTRAINT kvetina_pk PRIMARY KEY ( kvetina_id );

CREATE TABLE objednane_kvetiny (
    objednavka_id NUMBER NOT NULL,
    kvetina_id    NUMBER NOT NULL,
    mnozstvi      NUMBER,
    cena_za_kus   NUMBER(6, 2)
);

ALTER TABLE objednane_kvetiny ADD CONSTRAINT objednane_kvetiny_pk PRIMARY KEY ( objednavka_id,
                                                                                kvetina_id );

CREATE TABLE objednavky (
    objednavka_id    NUMBER NOT NULL,
    zakaznik_id      NUMBER NOT NULL,
    celkova_cena     NUMBER(8, 2) NOT NULL,
    datum_objednavky DATE NOT NULL,
    platba_id        NUMBER NOT NULL,
    stav_id          NUMBER NOT NULL
);

ALTER TABLE objednavky ADD CONSTRAINT objednavka_pk PRIMARY KEY ( objednavka_id );

CREATE TABLE obrazky (
    obrazek_id NUMBER NOT NULL,
    data       BLOB NOT NULL,
    nazev      VARCHAR2(20 CHAR) NOT NULL,
    popis      CLOB
);

ALTER TABLE obrazky ADD CONSTRAINT obrazek_pk PRIMARY KEY ( obrazek_id );

CREATE TABLE opravneni (
    opravneni_id     NUMBER NOT NULL,
    nazev            VARCHAR2(20 CHAR) NOT NULL,
    uroven_opravneni NUMBER DEFAULT 2 NOT NULL
);

ALTER TABLE opravneni
    ADD CHECK ( uroven_opravneni IN ( 0, 1, 2, 3 ) );

ALTER TABLE opravneni ADD CONSTRAINT opravneni_pk PRIMARY KEY ( opravneni_id );

CREATE TABLE platby (
    platba_id NUMBER NOT NULL,
    nazev     VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE platby ADD CONSTRAINT platba_pk PRIMARY KEY ( platba_id );

CREATE TABLE pracoviste (
    pracoviste_id NUMBER NOT NULL,
    adresa_id     NUMBER NOT NULL,
    nazev         VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE pracoviste ADD CONSTRAINT pracoviste_pk PRIMARY KEY ( pracoviste_id );

CREATE TABLE pracovni_pozice (
    pracovni_pozice_id NUMBER NOT NULL,
    nazev              VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE pracovni_pozice ADD CONSTRAINT pracovni_pozice_pk PRIMARY KEY ( pracovni_pozice_id );

CREATE TABLE stavy (
    stav_id NUMBER NOT NULL,
    nazev   VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE stavy ADD CONSTRAINT stav_pk PRIMARY KEY ( stav_id );

CREATE TABLE zakaznici (
    zakaznik_id  NUMBER NOT NULL,
    adresa_id    NUMBER NOT NULL,
    obrazek_id   NUMBER,
    opravneni_id NUMBER NOT NULL,
    email        VARCHAR2(255 CHAR) NOT NULL,
    jmeno        VARCHAR2(50 CHAR) NOT NULL,
    prijmeni     VARCHAR2(50 CHAR) NOT NULL,
    heslo_bcrypt VARCHAR2(60 CHAR)
);

ALTER TABLE zakaznici ADD CONSTRAINT zakaznik_pk PRIMARY KEY ( zakaznik_id );

CREATE TABLE zamestnanci (
    zamestnanec_id     NUMBER NOT NULL,
    pracoviste_id      NUMBER NOT NULL,
    pracovni_pozice_id NUMBER NOT NULL,
    adresa_id          NUMBER NOT NULL,
    opravneni_id       NUMBER NOT NULL,
    obrazek_id         NUMBER,
    jmeno              VARCHAR2(50 CHAR) NOT NULL,
    prijmeni           VARCHAR2(50 CHAR) NOT NULL,
    email              VARCHAR2(255 CHAR) NOT NULL,
    heslo_bcrypt       VARCHAR2(60 CHAR) NOT NULL,
    mzda               NUMBER(5, 2) NOT NULL
);

ALTER TABLE zamestnanci
    ADD CHECK ( mzda BETWEEN 0 AND 999.99 );

ALTER TABLE zamestnanci ADD CONSTRAINT zamestnanec_pk PRIMARY KEY ( zamestnanec_id );

ALTER TABLE historie_ceny
    ADD CONSTRAINT historie_ceny_cena_fk FOREIGN KEY ( cena_id )
        REFERENCES ceny ( cena_id );

ALTER TABLE historie_ceny
    ADD CONSTRAINT historie_ceny_kvetina_fk FOREIGN KEY ( kvetina_id )
        REFERENCES kvetiny ( kvetina_id );

ALTER TABLE kategorie
    ADD CONSTRAINT kategorie_kategorie_fk FOREIGN KEY ( nadkategorie_id )
        REFERENCES kategorie ( kategorie_id );

ALTER TABLE kvetiny
    ADD CONSTRAINT kvetina_barva_fk FOREIGN KEY ( barva_id )
        REFERENCES barvy ( barva_id );

ALTER TABLE kvetiny
    ADD CONSTRAINT kvetina_kategorie_fk FOREIGN KEY ( kategorie_id )
        REFERENCES kategorie ( kategorie_id );

ALTER TABLE kvetiny
    ADD CONSTRAINT kvetina_obrazek_fk FOREIGN KEY ( obrazek_id )
        REFERENCES obrazky ( obrazek_id );

ALTER TABLE objednane_kvetiny
    ADD CONSTRAINT obj_kve_kvetina_fk FOREIGN KEY ( kvetina_id )
        REFERENCES kvetiny ( kvetina_id );

ALTER TABLE objednane_kvetiny
    ADD CONSTRAINT obj_kve_objednavka_fk FOREIGN KEY ( objednavka_id )
        REFERENCES objednavky ( objednavka_id );

ALTER TABLE objednavky
    ADD CONSTRAINT objednavka_platba_fk FOREIGN KEY ( platba_id )
        REFERENCES platby ( platba_id );

ALTER TABLE objednavky
    ADD CONSTRAINT objednavka_stav_fk FOREIGN KEY ( stav_id )
        REFERENCES stavy ( stav_id );

ALTER TABLE objednavky
    ADD CONSTRAINT objednavka_zakaznik_fk FOREIGN KEY ( zakaznik_id )
        REFERENCES zakaznici ( zakaznik_id );

ALTER TABLE pracoviste
    ADD CONSTRAINT pracoviste_adresa_fk FOREIGN KEY ( adresa_id )
        REFERENCES adresy ( adresa_id );

ALTER TABLE zakaznici
    ADD CONSTRAINT zakaznik_adresa_fk FOREIGN KEY ( adresa_id )
        REFERENCES adresy ( adresa_id );

ALTER TABLE zakaznici
    ADD CONSTRAINT zakaznik_obrazek_fk FOREIGN KEY ( obrazek_id )
        REFERENCES obrazky ( obrazek_id );

ALTER TABLE zakaznici
    ADD CONSTRAINT zakaznik_opravneni_fk FOREIGN KEY ( opravneni_id )
        REFERENCES opravneni ( opravneni_id );

ALTER TABLE zamestnanci
    ADD CONSTRAINT zamestnanec_adresa_fk FOREIGN KEY ( adresa_id )
        REFERENCES adresy ( adresa_id );

ALTER TABLE zamestnanci
    ADD CONSTRAINT zamestnanec_obrazek_fk FOREIGN KEY ( obrazek_id )
        REFERENCES obrazky ( obrazek_id );

ALTER TABLE zamestnanci
    ADD CONSTRAINT zamestnanec_opravneni_fk FOREIGN KEY ( opravneni_id )
        REFERENCES opravneni ( opravneni_id );

ALTER TABLE zamestnanci
    ADD CONSTRAINT zamestnanec_pracoviste_fk FOREIGN KEY ( pracoviste_id )
        REFERENCES pracoviste ( pracoviste_id );

ALTER TABLE zamestnanci
    ADD CONSTRAINT zamestnanec_pracovni_pozice_fk FOREIGN KEY ( pracovni_pozice_id )
        REFERENCES pracovni_pozice ( pracovni_pozice_id );

CREATE SEQUENCE s_adresa_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_adresa_id BEFORE
    INSERT ON adresy
    FOR EACH ROW
    WHEN ( new.adresa_id IS NULL )
BEGIN
    :new.adresa_id := s_adresa_id.nextval;
END;
/

CREATE SEQUENCE s_barva_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_barva_id BEFORE
    INSERT ON barvy
    FOR EACH ROW
    WHEN ( new.barva_id IS NULL )
BEGIN
    :new.barva_id := s_barva_id.nextval;
END;
/

CREATE SEQUENCE s_cena_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_cena_id BEFORE
    INSERT ON ceny
    FOR EACH ROW
    WHEN ( new.cena_id IS NULL )
BEGIN
    :new.cena_id := s_cena_id.nextval;
END;
/

CREATE SEQUENCE s_kategorie_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_kategorie_id BEFORE
    INSERT ON kategorie
    FOR EACH ROW
    WHEN ( new.kategorie_id IS NULL )
BEGIN
    :new.kategorie_id := s_kategorie_id.nextval;
END;
/

CREATE SEQUENCE s_kvetina_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_kvetina_id BEFORE
    INSERT ON kvetiny
    FOR EACH ROW
    WHEN ( new.kvetina_id IS NULL )
BEGIN
    :new.kvetina_id := s_kvetina_id.nextval;
END;
/

CREATE SEQUENCE s_objednavka_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_objednavka_id BEFORE
    INSERT ON objednavky
    FOR EACH ROW
    WHEN ( new.objednavka_id IS NULL )
BEGIN
    :new.objednavka_id := s_objednavka_id.nextval;
END;
/

CREATE SEQUENCE s_obrazek_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_obrazek_id BEFORE
    INSERT ON obrazky
    FOR EACH ROW
    WHEN ( new.obrazek_id IS NULL )
BEGIN
    :new.obrazek_id := s_obrazek_id.nextval;
END;
/

CREATE SEQUENCE s_opravneni_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_opravneni_id BEFORE
    INSERT ON opravneni
    FOR EACH ROW
    WHEN ( new.opravneni_id IS NULL )
BEGIN
    :new.opravneni_id := s_opravneni_id.nextval;
END;
/

CREATE SEQUENCE s_platba_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_platba_id BEFORE
    INSERT ON platby
    FOR EACH ROW
    WHEN ( new.platba_id IS NULL )
BEGIN
    :new.platba_id := s_platba_id.nextval;
END;
/

CREATE SEQUENCE s_pracoviste_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_pracoviste_id BEFORE
    INSERT ON pracoviste
    FOR EACH ROW
    WHEN ( new.pracoviste_id IS NULL )
BEGIN
    :new.pracoviste_id := s_pracoviste_id.nextval;
END;
/

CREATE SEQUENCE s_pracovni_pozice_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_pracovni_pozice_id BEFORE
    INSERT ON pracovni_pozice
    FOR EACH ROW
    WHEN ( new.pracovni_pozice_id IS NULL )
BEGIN
    :new.pracovni_pozice_id := s_pracovni_pozice_id.nextval;
END;
/

CREATE SEQUENCE s_stav_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_stav_id BEFORE
    INSERT ON stavy
    FOR EACH ROW
    WHEN ( new.stav_id IS NULL )
BEGIN
    :new.stav_id := s_stav_id.nextval;
END;
/

CREATE SEQUENCE s_zakaznik_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_zakaznik_id BEFORE
    INSERT ON zakaznici
    FOR EACH ROW
    WHEN ( new.zakaznik_id IS NULL )
BEGIN
    :new.zakaznik_id := s_zakaznik_id.nextval;
END;
/

CREATE SEQUENCE s_zamestnanec_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER t_zamestnanec_id BEFORE
    INSERT ON zamestnanci
    FOR EACH ROW
    WHEN ( new.zamestnanec_id IS NULL )
BEGIN
    :new.zamestnanec_id := s_zamestnanec_id.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                             0
-- ALTER TABLE                             38
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          14
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         14
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   1
-- WARNINGS                                 0
